# Name of the workflow as it appears in GitHub Actions UI
name: Weekly CV Update

# Triggers for this workflow
on:
  # Schedule the workflow to run weekly
  # Your chosen cron expression: Every Monday at 9:00 UTC
  schedule:
    - cron: '0 9 * * 1'

  # Allows you to run this workflow manually from the Actions tab in GitHub
  workflow_dispatch:

# Permissions granted to the workflow job
# 'contents: write' is crucial for the action to be able to commit and push files back to the repo.
permissions:
  contents: write # This line is essential for git push to work

# Define a single job named 'build-cv'
jobs:
  build-cv:
    # Set the runner environment to Windows
    runs-on: windows-latest

    # Steps in the job
    steps:
      # Step 1: Checkout the repository code
      # This action brings your repository's code onto the runner.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up R environment
      # This action sets up R on the runner, making it available for subsequent steps.
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.x' # Explicitly set R version

      # Step 3: Set up TinyTeX (for LaTeX compilation)
      # This action installs a lightweight LaTeX distribution optimized for R.
      # It is cross-platform and will install TinyTeX on Windows.
      - name: Set up TinyTeX
        uses: r-lib/actions/setup-tinytex@v2
        with:
          # Use 'full' scheme for comprehensive LaTeX package support if needed,
          # though TinyTeX usually installs packages on demand.
          scheme: full

      # Step 4: Cache R packages
      # This step caches R packages to speed up subsequent workflow runs.
      # The path handling is managed by setup-r and actions/cache on Windows.
      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ~/.local/share/R # Path where R packages are stored (cross-platform way of referring to user's R library)
          key: r-${{ runner.os }}-r-lib-${{ hashFiles('**/*.R', '**/*.Rmd') }} # Cache key based on OS and R scripts
          restore-keys: |
            r-${{ runner.os }}-r-lib- # Fallback restore key

      # Step 5: Install R packages
      # Install all necessary R packages for your scripts.
      - name: Install R packages
        run: |
          Rscript -e 'install.packages(c("vitae", "tibble", "RefManageR", "rmarkdown", "knitr", "httr", "jsonlite", "rorcid"), repos = "https://cran.r-project.org")'

      # Step 6: Check for required lua filter file
      # The cv.Rmd uses --lua-filter=lua/strong.lua, so this file needs to exist in your repo.
      # Path check works cross-platform.
      - name: Check for lua/strong.lua
        run: |
          if (-not (Test-Path "lua/strong.lua")) {
            Write-Error "Error: lua/strong.lua not found! This file is referenced in cv.Rmd and is required for compilation."
            exit 1
          }
        shell: pwsh # Use PowerShell for Windows commands

      # Step 7: Run the ORCID paper collection script
      # This script should generate/update jaron_published_orcid.bib.
      # The ORCID_TOKEN secret is passed as an environment variable.
      - name: Run ORCID paper collection script
        run: Rscript get_orcid_papers.R
        env:
          ORCID_TOKEN: ${{ secrets.ORCID_TOKEN }} # Pass the ORCID_TOKEN from GitHub Secrets

      # Step 8: Knit the CV R Markdown file to PDF
      # This command will compile your R Markdown file into cv.pdf.
      - name: Knit CV
        run: Rscript -e 'rmarkdown::render("cv.Rmd")'

      # Step 9: Commit and push the updated files
      # Using stefanzweifel/git-auto-commit-action for simplicity and robustness.
      # It automatically handles git configuration, adding, committing, and pushing.
      - name: Commit and push updated files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Automated weekly update of CV and bibliography" # Message for the commit
          # Specify the files to commit. This ensures only these files are handled.
          files: |
            jaron_published_orcid.bib
            cv.pdf
